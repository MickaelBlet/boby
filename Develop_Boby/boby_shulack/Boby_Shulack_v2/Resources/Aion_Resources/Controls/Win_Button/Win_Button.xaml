<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
>
	<Style x:Key="Style_Close_Button" TargetType="{x:Type Button}">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Foreground" Value="Transparent" />
		<Setter Property="Width" Value="33" />
		<Setter Property="Height" Value="24" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Image Name="image"	Source="Close.png" />
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver"	Value="True">
							<Setter Property="Source" TargetName="image"
							        Value="Close_Hover.png" />
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter	Property="Source" TargetName="image"
							        Value="Close_Pressed.png" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="Style_Minimise_Button" TargetType="{x:Type Button}">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Foreground" Value="Transparent" />
		<Setter Property="Width" Value="28" />
		<Setter Property="Height" Value="24" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Image Name="image"	Source="Minimise.png" />
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver"	Value="True">
							<Setter Property="Source" TargetName="image"
							        Value="Minimise_Hover.png" />
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter	Property="Source" TargetName="image"
							        Value="Minimise_Pressed.png" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="Style_Setting_Button" TargetType="{x:Type Button}">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Foreground" Value="Transparent" />
		<Setter Property="Width" Value="28" />
		<Setter Property="Height" Value="24" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid>
						<Image Name="image"	Source="Setting.png" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver"	Value="True">
							<Setter	Property="Source" TargetName="image"
							        Value="Setting_Hover.png" />
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter	Property="Source" TargetName="image"
							        Value="Setting_Pressed.png" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="Style_Hide_Button" TargetType="{x:Type Button}">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Foreground" Value="Transparent" />
		<Setter Property="Width" Value="28" />
		<Setter Property="Height" Value="24" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid>
						<Image Name="image"	Source="Hide.png" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver"	Value="True">
							<Setter	Property="Source" TargetName="image"
							        Value="Hide_Hover.png" />
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter	Property="Source" TargetName="image"
							        Value="Hide_Pressed.png" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="Style_Show_Button" TargetType="{x:Type Button}">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Foreground" Value="Transparent" />
		<Setter Property="Width" Value="28" />
		<Setter Property="Height" Value="24" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid>
						<Image Name="image"	Source="Show.png" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver"	Value="True">
							<Setter	Property="Source" TargetName="image"
							        Value="Show_Hover.png" />
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter	Property="Source" TargetName="image"
							        Value="Show_Pressed.png" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="Style_Refresh_Button" TargetType="{x:Type Button}">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Foreground" Value="Transparent" />
		<Setter Property="Width" Value="28" />
		<Setter Property="Height" Value="24" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid>
						<Image Name="image"	Source="Refresh.png" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver"	Value="True">
							<Setter	Property="Source" TargetName="image"
							        Value="Refresh_Hover.png" />
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter	Property="Source" TargetName="image"
							        Value="Refresh_Pressed.png" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

    <Style x:Key="Style_Check_Win_Button"
		TargetType="{x:Type CheckBox}">
        <Setter
			Property="Template">
            <Setter.Value>
                <ControlTemplate
					TargetType="{x:Type CheckBox}">
                    <StackPanel
						Background="Transparent"
						Orientation="Horizontal">
                        <Image
							x:Name="imageCheckBox"
							Source="Check.png"
							Width="28"
							Height="24"
							Margin="0,0" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                            <Condition Property="IsChecked" Value="False" />
                            <Condition Property="IsMouseOver" Value="False" />
                                </MultiTrigger.Conditions>
                            <Setter
								TargetName="imageCheckBox"
								Property="Source"
								Value="Not_Check.png" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="False" />
                                <Condition Property="IsMouseOver" Value="True" />
                                </MultiTrigger.Conditions>
                            <Setter
								TargetName="imageCheckBox"
								Property="Source"
								Value="Not_Check_Hover.png" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="False" />
                                <Condition Property="IsPressed" Value="True" />
                                </MultiTrigger.Conditions>
                            <Setter
								TargetName="imageCheckBox"
								Property="Source"
								Value="Not_Check_Pressed.png" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                                </MultiTrigger.Conditions>
                            <Setter
								TargetName="imageCheckBox"
								Property="Source"
								Value="Check_Hover.png" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True" />
                                <Condition Property="IsPressed" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter
								TargetName="imageCheckBox"
								Property="Source"
								Value="Check_Pressed.png" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <CroppedBitmap x:Key="Radar_Setting"                  Source="Radar_Setting.png" SourceRect="0,0,20,20"/>
    <CroppedBitmap x:Key="Radar_Setting.Hover"            Source="Radar_Setting.png" SourceRect="20,0,20,20"/>
    <CroppedBitmap x:Key="Radar_Setting.Pressed"          Source="Radar_Setting.png" SourceRect="40,0,20,20"/>
    <Style x:Key="Style_Radar_Setting_Button" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="Transparent" />
        <Setter Property="Width" Value="20" />
        <Setter Property="Height" Value="20" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Image Name="image"	Source="{StaticResource Radar_Setting}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"	Value="True">
                            <Setter	Property="Source" TargetName="image"
							        Value="{StaticResource Radar_Setting.Hover}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter	Property="Source" TargetName="image"
							        Value="{StaticResource Radar_Setting.Pressed}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>